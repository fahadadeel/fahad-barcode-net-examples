name: Auto-Generate Documentation (Node.js)
on:
  push:
    paths:
      - 'Examples.Core/**/*.cs'
    branches:
      - main
      - develop
  pull_request:
    paths:
      - 'Examples.Core/**/*.cs'
    types: [opened, synchronize]

env:
  LITELLM_API_KEY: ${{ secrets.LITELLM_API_KEY }}
  GITHUB_GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
  DOCUMENTATION_REPO: ${{ secrets.DOCUMENTATION_REPO }}
  DOCUMENTATION_TOKEN: ${{ secrets.DOCUMENTATION_REPO_TOKEN }}

jobs:
  detect-new-examples:
    runs-on: ubuntu-latest
    outputs:
      examples: ${{ steps.detect.outputs.examples }}
      has_new_examples: ${{ steps.detect.outputs.has_new_examples }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '.github/scripts/package.json'

      - name: Install Dependencies
        working-directory: .github/scripts
        run: npm ci

      - name: Detect New Examples
        id: detect
        working-directory: .github/scripts
        run: node detect-examples.js

  validate-examples:
    needs: detect-new-examples
    if: needs.detect-new-examples.outputs.has_new_examples == 'true'
    runs-on: ubuntu-latest
    outputs:
      validation_passed: ${{ steps.validate.outputs.validation_passed }}
      valid_examples: ${{ steps.validate.outputs.valid_examples }}
      validation_summary: ${{ steps.validate.outputs.validation_summary }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '.github/scripts/package.json'

      - name: Install Dependencies
        working-directory: .github/scripts
        run: npm ci

      - name: Validate All Examples
        id: validate
        working-directory: .github/scripts
        run: |
          EXAMPLES_LIST="${{ join(fromJson(needs.detect-new-examples.outputs.examples), ',') }}"
          echo "� Validating examples: $EXAMPLES_LIST"
          node validate-examples.js --example-files "$EXAMPLES_LIST"

  create-gists:
    needs: [detect-new-examples, validate-examples]
    if: needs.detect-new-examples.outputs.has_new_examples == 'true' && needs.validate-examples.outputs.validation_passed == 'true'
    runs-on: ubuntu-latest
    outputs:
      gist_data: ${{ steps.create_gists.outputs.gist_data }}
    strategy:
      matrix:
        example: ${{ fromJson(needs.validate-examples.outputs.valid_examples) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '.github/scripts/package.json'

      - name: Install Dependencies
        working-directory: .github/scripts
        run: npm ci

      - name: Create GitHub Gists
        id: create_gists
        working-directory: .github/scripts
        run: |
          node create-gists.js \
            --example-file "${{ matrix.example }}" \
            --examples-repo ".."

      - name: Upload Gist Data
        uses: actions/upload-artifact@v4
        with:
          name: gist-data-${{ strategy.job-index }}
          path: .github/scripts/gist-*.json
          retention-days: 1

  generate-documentation:
    needs: [detect-new-examples, validate-examples, create-gists]
    if: needs.detect-new-examples.outputs.has_new_examples == 'true' && needs.validate-examples.outputs.validation_passed == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example: ${{ fromJson(needs.validate-examples.outputs.valid_examples) }}
    steps:
      - name: Check Documentation Repository Configuration
        id: check_docs_repo
        run: |
          if [ -z "${{ env.DOCUMENTATION_REPO }}" ] || [ "${{ env.DOCUMENTATION_REPO }}" = "" ]; then
            echo "⚠️ DOCUMENTATION_REPO not configured. Skipping documentation generation."
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            # Extract repo name from URL if it's a full GitHub URL
            REPO_NAME="${{ env.DOCUMENTATION_REPO }}"
            if [[ "$REPO_NAME" == https://github.com/* ]]; then
              REPO_NAME=$(echo "$REPO_NAME" | sed 's|https://github.com/||')
            fi
            echo "✅ DOCUMENTATION_REPO configured: $REPO_NAME"
            echo "skip=false" >> $GITHUB_OUTPUT
            echo "repo_name=$REPO_NAME" >> $GITHUB_OUTPUT
          fi

      - name: Checkout Examples Repo
        if: steps.check_docs_repo.outputs.skip == 'false'
        uses: actions/checkout@v4
        with:
          path: examples-repo

      - name: Checkout Documentation Repo
        if: steps.check_docs_repo.outputs.skip == 'false'
        uses: actions/checkout@v4
        with:
          repository: ${{ steps.check_docs_repo.outputs.repo_name }}
          token: ${{ env.DOCUMENTATION_TOKEN }}
          path: docs-repo

      - name: Setup Node.js
        if: steps.check_docs_repo.outputs.skip == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'examples-repo/.github/scripts/package.json'

      - name: Install Dependencies
        if: steps.check_docs_repo.outputs.skip == 'false'
        working-directory: examples-repo/.github/scripts
        run: npm ci

      - name: Download Gist Data
        if: steps.check_docs_repo.outputs.skip == 'false'
        uses: actions/download-artifact@v4
        with:
          pattern: gist-data-*
          path: gist-artifacts/
          merge-multiple: true

      - name: Copy Gist Data
        if: steps.check_docs_repo.outputs.skip == 'false'
        run: |
          mkdir -p examples-repo/.github/scripts/
          cp -v gist-artifacts/*.json examples-repo/.github/scripts/ || echo "No gist files found"
          ls -la examples-repo/.github/scripts/gist-*.json || echo "No gist files after copy"

      - name: Generate Documentation
        if: steps.check_docs_repo.outputs.skip == 'false'
        working-directory: examples-repo/.github/scripts
        run: |
          node generate-docs.js \
            --example-file "${{ matrix.example }}" \
            --examples-repo "../.." \
            --docs-repo "../../../docs-repo"

      - name: Create Pull Request
        if: steps.check_docs_repo.outputs.skip == 'false'
        uses: peter-evans/create-pull-request@v5
        with:
          path: docs-repo
          token: ${{ env.DOCUMENTATION_TOKEN }}
          commit-message: 'docs: Add documentation for ${{ matrix.example }}'
          title: 'Auto-generated documentation for ${{ matrix.example }}'
          body: |
            ## Auto-generated Documentation

            This PR was automatically generated for the new example: `${{ matrix.example }}`

            ### Changes
            - Added documentation based on code analysis using AI
            - Created interactive GitHub Gist with complete example code
            - Followed existing documentation structure and patterns
            - Included code examples, Gist embeds, and proper formatting

            ### Source
            Generated from: `${{ matrix.example }}`
            Repository: `${{ github.repository }}`
            Commit: `${{ github.sha }}`

            Please review the generated content for accuracy and completeness.

            ---
            *Generated by Node.js auto-documentation system*
          branch: auto-docs/${{ matrix.example }}-${{ github.run_number }}
          delete-branch: true
